# Generated by Django 3.2.9 on 2021-12-07 03:54

import annoying.fields
import chefapp.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='SearchFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('field', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShareZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Default', max_length=128)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('message', models.CharField(blank=True, default='', max_length=512)),
                ('max_recipes', models.IntegerField(default=0)),
                ('max_storage_mb', models.IntegerField(default=0, help_text='Maximum file storage for space in MB. 0 for unlimited, -1 to disable file upload.')),
                ('max_users', models.IntegerField(default=0)),
                ('allow_sharing', models.BooleanField(default=True)),
                ('demo', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('user', annoying.fields.AutoOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('theme', models.CharField(choices=[('TANDOOR', 'Tandoor'), ('BOOTSTRAP', 'Bootstrap'), ('DARKLY', 'Darkly'), ('FLATLY', 'Flatly'), ('SUPERHERO', 'Superhero')], default='TANDOOR', max_length=128)),
                ('nav_color', models.CharField(choices=[('PRIMARY', 'Primary'), ('SECONDARY', 'Secondary'), ('SUCCESS', 'Success'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('DANGER', 'Danger'), ('LIGHT', 'Light'), ('DARK', 'Dark')], default='PRIMARY', max_length=128)),
                ('default_unit', models.CharField(default='g', max_length=32)),
                ('use_fractions', models.BooleanField(default=False)),
                ('use_kj', models.BooleanField(default=False)),
                ('default_page', models.CharField(choices=[('SEARCH', 'Search'), ('PLAN', 'Meal-Plan'), ('BOOKS', 'Books')], default='SEARCH', max_length=64)),
                ('search_style', models.CharField(choices=[('SMALL', 'Small'), ('LARGE', 'Large'), ('NEW', 'New')], default='NEW', max_length=64)),
                ('show_recent', models.BooleanField(default=True)),
                ('ingredient_decimals', models.IntegerField(default=2)),
                ('comments', models.BooleanField(default=True)),
                ('shopping_auto_sync', models.IntegerField(default=5)),
                ('sticky_navbar', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('plan_share', models.ManyToManyField(blank=True, related_name='plan_share_default', to=settings.AUTH_USER_MODEL)),
                ('sharezone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='chefapp.sharezone')),
            ],
        ),
        migrations.CreateModel(
            name='SearchPreference',
            fields=[
                ('user', annoying.fields.AutoOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('search', models.CharField(choices=[('plain', 'Simple'), ('phrase', 'Phrase'), ('websearch', 'Web'), ('raw', 'Raw')], default='plain', max_length=32)),
                ('lookup', models.BooleanField(default=False)),
                ('trigram_threshold', models.DecimalField(decimal_places=2, default=0.1, max_digits=3)),
                ('fulltext', models.ManyToManyField(blank=True, related_name='fulltext_fields', to='chefapp.SearchFields')),
                ('icontains', models.ManyToManyField(blank=True, default=chefapp.models.nameSearchField, related_name='icontains_fields', to='chefapp.SearchFields')),
                ('istartswith', models.ManyToManyField(blank=True, related_name='istartswith_fields', to='chefapp.SearchFields')),
                ('trigram', models.ManyToManyField(blank=True, default=chefapp.models.nameSearchField, related_name='trigram_fields', to='chefapp.SearchFields')),
                ('unaccent', models.ManyToManyField(blank=True, default=chefapp.models.allSearchFields, related_name='unaccent_fields', to='chefapp.SearchFields')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('abstract', models.CharField(max_length=500)),
                ('full_content', models.CharField(blank=True, max_length=5000, null=True)),
                ('working_time', models.IntegerField(default=0)),
                ('pub_time', models.DateTimeField(auto_now_add=True)),
                ('pictures', models.ImageField(blank=True, null=True, upload_to='recipe_images/')),
                ('category', models.ManyToManyField(to='chefapp.Category')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sharezone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chefapp.sharezone')),
            ],
        ),
        migrations.CreateModel(
            name='InviteLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('valid_until', models.DateField(default=chefapp.models.default_valid_until)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('sharezone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chefapp.sharezone')),
                ('used_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='used_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chefapp.recipecontent')),
            ],
        ),
    ]
